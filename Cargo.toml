[package]
name = "esp-hub75"
description = "A Rust driver for HUB75 LED matrix displays on ESP32 microcontrollers"
repository = "https://github.com/liebman/esp-hub75"
documentation = "https://docs.rs/esp-hub75"
keywords = ["esp32", "led-matrix", "hub75", "embedded", "driver"]
categories = ["embedded", "hardware-support", "no-std"]
edition = "2021"
version = "0.5.0"
authors = ["liebman <liebman@zod.com>"]
license = "MIT OR Apache-2.0"
rust-version = "1.88"

[profile.dev]
debug = true    # Symbols are nice and they don't increase the size on Flash
opt-level = "s"

[profile.release]
debug = true    # Symbols are nice and they don't increase the size on Flash
opt-level = "s"

[dependencies]
bitfield = { version = "0.19.1" }
cfg-if = "1.0.1"
defmt = { version = "1.0.1", optional = true }
embedded-graphics = { version = "0.8.1" }
embedded-hal = { version = "1.0.0" }
embedded-hal-async = { version = "1.0.0" }
esp-hal = { version = "=1.0.0-rc.0", default-features = false, features = ["requires-unstable"] }
log = { version = "0.4.22", optional = true }
hub75-framebuffer = { version = "0.4.0" }
esp-hal-procmacros = { version = "0.19.0", optional = true }

[dev-dependencies]
defmt-rtt = { version = "1.0.0" }
embassy-embedded-hal = { version = "0.3.1" }
embassy-executor = { version = "0.7.0" }
embassy-futures = { version = "0.1.1" }
embassy-sync = { version = "0.6.2" }
embassy-time = { version = "0.4.0", features = [] }
esp-backtrace = { version = "0.17.0", features = [
    "panic-handler",
    "exception-handler",
] }
esp-hal = { version = "=1.0.0-rc.0", features = ["unstable"] }
esp-println = { version = "0.15.0" }
esp-hal-embassy = { version = "0.9.0" }
heapless = { version = "0.8.0", features = ["ufmt"] }
static_cell = { version = "2.1.1" }

[features]
default = []
skip-black-pixels = ["hub75-framebuffer/skip-black-pixels"]
iram = ["dep:esp-hal-procmacros"]
esp32 = [
    "esp-hal/esp32",
    "esp-backtrace/esp32",
    "esp-hal-embassy/esp32",
    "esp-println/esp32",
    "hub75-framebuffer/esp-hal-dma",
    "hub75-framebuffer/esp32-ordering",
]
esp32s3 = [
    "esp-hal/esp32s3",
    "esp-backtrace/esp32s3",
    "esp-hal-embassy/esp32s3",
    "esp-println/esp32s3",
    "hub75-framebuffer/esp-hal-dma",
]
esp32c6 = [
    "esp-hal/esp32c6",
    "esp-backtrace/esp32c6",
    "esp-hal-embassy/esp32c6",
    "esp-println/esp32c6",
    "hub75-framebuffer/esp-hal-dma",
]
defmt = [
    "dep:defmt",
    "esp-backtrace/defmt",
    "esp-hal/defmt",
    "hub75-framebuffer/defmt",
]
log = [
    "dep:log",
    "esp-backtrace/println",
    "esp-hal/log-04",
    "esp-println/auto",
    "esp-println/log-04",
    "esp-println/colors",
]
invert-blank = [] # only for some latched implementations

# this feature is required for the docs.rs build and release builds to work
esp-hal-unstable = ["esp-hal/unstable"]

[package.metadata.docs.rs]
features = ["esp32c6", "esp-hal-unstable"]
targets = ["riscv32imac-unknown-none-elf"]
cargo-args = ["-Z", "build-std=core"]

# [patch.crates-io]

# hub75-framebuffer = { git = "https://github.com/liebman/hub75-framebuffer.git", branch = "main" }

# esp-backtrace    = { git = "https://github.com/esp-rs/esp-hal.git", branch = "main" }
# esp-hal          = { git = "https://github.com/esp-rs/esp-hal.git", branch = "main" }
# esp-hal-embassy  = { git = "https://github.com/esp-rs/esp-hal.git", branch = "main" }
# esp-println      = { git = "https://github.com/esp-rs/esp-hal.git", branch = "main" }
# esp-riscv-rt     = { git = "https://github.com/esp-rs/esp-hal.git", branch = "main" }
# xtensa-lx-rt     = { git = "https://github.com/esp-rs/esp-hal.git", branch = "main" }

# esp-backtrace = { path = "../esp-hal/esp-backtrace" }
# esp-build = { path = "../esp-hal/esp-build" }
# esp-hal = { path = "../esp-hal/esp-hal" }
# esp-hal-embassy = { path = "../esp-hal/esp-hal-embassy" }
# esp-println = { path = "../esp-hal/esp-println" }
# esp-riscv-rt = { path = "../esp-hal/esp-riscv-rt" }
# xtensa-lx-rt = { path = "../esp-hal/xtensa-lx-rt" }
